openapi: 3.0.0

info:

  title: 06-Jobs-API-Revision

  contact: {} 

  version: '1.0'

servers:

- url: https://sore-lime-lovebird-tam.cyclic.app/api/v1

  variables: {}

paths:

  /auth/register:

    post:

      tags:

      - Auth

      summary: Register User

      operationId: RegisterUser

      parameters: []

      requestBody:

        description: ''

        content:

          application/json:

            schema:

              allOf:

              - $ref: '#/components/schemas/RegisterUserRequest'

              - example:

                  name: Kobe Bryant

                  email: kobe@samplefire.com

                  password: abc123

            example:

              name: Kobe Bryant

              email: kobe@samplefire.com

              password: abc123

        required: true

      responses:

        '200':

          description: ''

          headers: {}

      deprecated: false

      security: []

  /auth/login:

    post:

      tags:

      - Auth

      summary: Login User

      operationId: LoginUser

      parameters: []

      requestBody:

        description: ''

        content:

          application/json:

            schema:

              allOf:

              - $ref: '#/components/schemas/LoginUserRequest'

              - example:

                  name: Kobe Bryant

                  email: kobe@samplefire.com

                  password: abc123

            example:

              name: Kobe Bryant

              email: kobe@samplefire.com

              password: abc123

        required: true

      responses:

        '200':

          description: ''

          headers: {}

      deprecated: false

      security: []

  /jobs:

    post:

      tags:

      - Jobs

      summary: Create Job

      operationId: CreateJob

      parameters: []

      requestBody:

        description: ''

        content:

          application/json:

            schema:

              allOf:

              - $ref: '#/components/schemas/CreateJobRequest'

              - example:

                  company: Kobe Nike

                  position: Designer

            example:

              company: Kobe Nike

              position: Designer

        required: true

      responses:

        '200':

          description: ''

          headers: {}

      deprecated: false

      security:

      - bearer: []

    get:

      tags:

      - Jobs

      summary: Get All Jobs

      operationId: GetAllJobs

      parameters: []

      responses:

        '200':

          description: ''

          headers: {}

      deprecated: false

      security:

      - bearer: []

  /jobs/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: The job ID

    get:

      tags:

      - Jobs

      summary: Get Specific Jobs

      operationId: GetSpecificJobs

      parameters: []

      responses:

        '200':

          description: ''

          headers: {}

      deprecated: false

      security:

      - bearer: []

  

    delete:

      tags:

      - Jobs

      summary: Delete Job

      operationId: DeleteJob

      parameters: []

      responses:

        '200':

          description: ''

          headers: {}

      deprecated: false

      security:

      - bearer: []

  

    patch:

      tags:

      - Jobs

      summary: Update Job

      operationId: UpdateJob

      parameters: []

      requestBody:

        description: ''

        content:

          application/json:

            schema:

              allOf:

              - $ref: '#/components/schemas/UpdateJobRequest'

              - example:

                  company: Book

                  position: Author

            example:

              company: Book

              position: Author

        required: true

      responses:

        '200':

          description: ''

          headers: {}

      deprecated: false

      security:

      - bearer: []

components:

  schemas:

    RegisterUserRequest:

      title: RegisterUserRequest

      required:

      - name

      - email

      - password

      type: object

      properties:

        name:

          type: string

        email:

          type: string

        password:

          type: string

      example:

        name: Kobe Bryant

        email: kobe@samplefire.com

        password: abc123

    CreateJobRequest:

      title: CreateJobRequest

      required:

      - company

      - position

      type: object

      properties:

        company:

          type: string

        position:

          type: string

      example:

        company: Kobe Nike

        position: Designer

    UpdateJobRequest:

      title: UpdateJobRequest

      required:

      - company

      - position

      type: object

      properties:

        company:

          type: string

        position:

          type: string

      example:

        company: Book

        position: Author

    LoginUserRequest:

      title: LoginUserRequest

      required:

      - name

      - email

      - password

      type: object

      properties:

        name:

          type: string

        email:

          type: string

        password:

          type: string

      example:

        name: Kobe Bryant

        email: kobe@samplefire.com

        password: abc123

  securitySchemes:

    bearer:

      type: http

      scheme: bearer

security: []

tags: 

- name: Misc

  description: ''

- name: Auth

  description: ''

- name: Jobs

  description: ''

